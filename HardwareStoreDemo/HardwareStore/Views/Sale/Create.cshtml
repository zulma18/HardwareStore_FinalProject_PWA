﻿
@model Sale

@{
    ViewData["Title"] = "Create";
    ViewData["TitlePage"] = "Registrar Venta";
}


<div class="row">
    <div class="col-md-12 bg-white py-2 rounded-2">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row ">
                <div class="form-group col-md-6 d-flex flex-column py-3">
                    <label asp-for="ClientID" class="control-label">Cliente</label>
                    <select class="form-control d-flex justify-content-center align-items-center client-select" asp-for="ClientID" asp-items="@ViewBag.Clients" id="clientsSearch" required>
                        <option value=""></option>
                    </select>
                    <span asp-validation-for="ClientID" class="text-danger"></span>
                </div>
                <div class="form-group col-md-6 py-3">
                    <b>Fecha: </b> <br />
                    <span id="currentDate"></span>
                </div>
                <div class="form-group col-md-6 d-flex flex-column py-3">
                    <label asp-for="EmployeeID" class="control-label">Empleado</label>
                    <select class="form-control d-flex justify-content-center align-items-center employee-select" asp-for="EmployeeID" asp-items="@ViewBag.Employees" id="employeesSearch" required>
                        <option value=""></option>
                    </select>
                    <span asp-validation-for="EmployeeID" class="text-danger"></span>
                </div>
                
                <div class="form-group col-md-6 py-3">
                    <b>Total: <br /> $</b>
                    <span id="total">0</span>
                </div>
            </div>

            <!-- Se mostrara si no se agrego ningun producto validacion desde el servidor -->
            @if (TempData["message"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["message"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- Se mostrara si no se agrego al menos 1 producto Validacion desde El cliente -->
            <div class="alert alert-danger alert-dismissible fade show d-none" role="alert" id="checkProduct">
                  <p>Debe Agregar Almenos un Producto</p>
                  <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>

            <table id="details-table" class="table table-striped table-responsive table-bordered mt-2 bg-light">
                <thead class="bg-secondary  text-white">
                    <tr>
                        <th style="width:30%;">Producto</th>
                        <th style="width:15%;">Cantidad</th>
                        <th>Stock</th>
                        <th>Precio</th>
                        <th>Total</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- si se envia el formulario y hay un problema con la validacion del modelo 
                        se recuperan los datos del detalle de venta
                    -->
                     @if (Model.SaleDetails != null)
                    {
                        var saleDetailsList = Model.SaleDetails.ToList();
                        for (int i = 0; i < saleDetailsList.Count; i++)
                        {
                            <tr>
                                <td style="width:30%;">
                                    @{
                                        var selectedProductId = saleDetailsList[i].ProductID.ToString();
                                    }
                                    <select name="SaleDetails[@i].ProductID" class="form-control product-select" required >
                                        <option value="">Seleccione un Producto</option>
                                        @foreach (var product in ViewBag.Products)
                                        {
                                            if (product.Value == selectedProductId)
                                            {
                                                <option value="@saleDetailsList[i].ProductID" selected="selected">@product.Text</option>
                                            }
                                        }
                                    </select>
                                    <input type="text" name="SaleDetails[@i].ProductName" class="form-control d-none" />
                                </td>
                                <td style="width:15%;"><input type="number" name="SaleDetails[@i].Quantity" class="form-control text-center" value="@saleDetailsList[i].Quantity" required /></td>
                                <td class="text-center">
                                    <span class="productStock">@saleDetailsList[i].Stock</span>
                                    <input type="number" name="SaleDetails[@i].Stock" class="form-control text-center d-none" />
                                </td>
                                <td class="text-center">$ 
                                    <span class="productPrice">@saleDetailsList[i].UnitPrice</span>
                                    <input type="text" name="SaleDetails[@i].UnitPrice" class="form-control text-center d-none" />
                                </td>
                                <td class="text-center">$ <span class="totalDetail">@(saleDetailsList[i].UnitPrice * saleDetailsList[i].Quantity)</span></td>
                                <td class="text-center">
                                    <button type="button" class="btn btn-success"><i class="lni lni-shopping-basket"></i></button>
                                    <button type="button" class="btn btn-danger remove-row"><i class="lni lni-trash-can"></i></button>
                                </td>
                            </tr>
                        }
                    }
 
                    <!-- Aquí se agregarán las filas dinámicamente -->

                </tbody>
            </table>

            <div class="d-flex justify-content-between align-items-center px-2">
                <div>
                    <button type="button" id="add-row" class="btn btn-secondary">Agregar Producto <i class="lni lni-circle-plus"></i></button>
                    <button type="submit" class="btn btn-success">Guardar Venta <i class="lni lni-save"></i></button>
                </div>
                
                <div>
                    <a asp-action="Index" class="btn btn-primary mt-2">Volver a la Lista <i class="lni lni-arrow-left"></i></a>
                </div>
            </div>
            
        </form>
        
    </div>
</div>

<!-- MODAL PARA CUANDO LA CANTIDAD ES MAYOR AL STOCK -->
<div class="modal " tabindex="-1" id="enoughStock">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cantidad de Producto incorrecta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Por Favor Revise la Cantidad de Producto Solicitado.</p>
            </div>
        </div>
    </div>
</div>

<!-- MODAL PARA CUANDO HAY PRODUCTOS REPETIDOS -->
<div class="modal " tabindex="-1" id="duplicateProduct">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Productos Duplicados</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Por Favor Revise los productos solicitados.</p>
            </div>
        </div>
    </div>
</div>


<!-- MODAL PARA CUANDO EL USUARIO OLVIDA AGREGAR EL CLIENTE O EL EMPLEADO -->
<div class="modal " tabindex="-1" id="clientOrEmployeeId">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-danger">Datos Faltantes!</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Por Favor Revise los Datos</p>
                <p>Olvido agregar el Cliente o el Empleado.</p>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $('#clientsSearch').select2({
                width:'70%',
                placeholder: "Seleccione un Cliente ",
            });

            $('#employeesSearch').select2({
                width:'70%',
                placeholder: "Seleccione un Empleado",
            });

            // ejecuta la funcion calculateTotalSale si SaleDetails no viene vacio
            @if (Model.SaleDetails != null)
            {
                <text>
                    calculateTotalSale()
                </text>
            }

            // agrega filas en tabla de productos
            $('#add-row').click(function () {
                var index = $('#details-table tbody tr').length;
                var fila = `<tr>
                                 <td style="width:30%;">
                                      <select name="SaleDetails[${index}].ProductID" class="form-control product-select" >
                                            <option value="">Seleccione un Producto</option>
                                            @foreach (var product in ViewBag.Products)
                                                {
                                                    <option value="@product.Value">@product.Text</option>
                                                }
                                      </select>
                                      <input type="text" name="SaleDetails[${index}].ProductName" class="form-control d-none" />
                                 </td>
                                 <td style="width:15%;"><input type="number" name="SaleDetails[${index}].Quantity" class="form-control text-center" value="1" required /></td>
                                 <td class="text-center">
                                    <span class="productStock">0</span>
                                    <input type="number" name="SaleDetails[${index}].Stock" class="form-control text-center d-none" />
                                 </td>
                                 <td class="text-center">$ <span class="productPrice">0</span>
                                 <input type="text" name="SaleDetails[${index}].UnitPrice" class="form-control text-center d-none"  />
                                 </td>
                                 <td class="text-center">$ <span class="totalDetail">0</span></td>
                                 <td class="text-center">
                                              <button type="button" class="btn btn-success"><i class="lni lni-checkmark"></i></button>
                                              <button type="button" class="btn btn-danger remove-row"><i class="lni lni-trash-can"></i></button>
                                 </td>
                            </tr>`;
                $('#details-table tbody').append(fila);
                $('.product-select').select2({ // agrega select2 a todos los elementos con la clase "product-select"
                    language: "es",
                    width: '100%',
                    placeholder: "Seleccione un Producto"
                });
            });

            // elimina las filas de la tabla de productos
            $('#details-table').on('click', '.remove-row', function () {
                $(this).closest('tr').remove();
                calculateTotalSale();
            });

            // remueve la clase cuando se cambia el producto repetido
            $('#details-table').on('change', '.product-select', function () {
                var $row = $(this).closest('tr');
                $row.removeClass('bg-danger');
            });

            // llena la fila cuando se selecciona un producto
            $('#details-table').on('change', 'input[name$=".Quantity"]', function () {
                var $row = $(this).closest('tr');
                var cantidad = parseFloat($row.find('input[name$=".Quantity"]').val()) || 0;
                var total  = parseFloat($row.find('.productPrice').text() * cantidad)
                var stock = parseFloat($row.find('.productStock').text()) || 0;
                $row.find('.totalDetail').text(total.toFixed(2));
                checkQuantity($row, cantidad, stock);
                calculateTotalSale();
            });

            // suma los totales de los detalles para mostrar el total de la venta
            function calculateTotalSale() {
                var totalVenta = 0;
                $('#details-table tbody tr').each(function () {
                    var total = parseFloat($(this).find('.totalDetail').text()) || 0;
                    totalVenta += total;
                });
                $('#total').text(totalVenta.toFixed(2));
            }

            // recupera el id del producto seleccionado y lo envia a la funcion
            // searchProductInfo junto con la fila
            $('#details-table').on('change', '.product-select', function () {
                var selectedProduct = $(this).val();
                searchProductInfo(selectedProduct, $(this).closest('tr'));
            });

            // trae el precio y el stock del producto y actualiza la fila
            function searchProductInfo(productID, $row) {
                if (productID) {
                    $.ajax({
                        url: '/Sale/SearchProductById',
                        method: 'GET',
                        data: { id: productID },
                        success: function (data) {
                            if (data) {
                                $row.find('.productPrice').text(data.unitPrice);
                                $row.find('input[name$=".ProductName"]').val(data.productName); // input oculo guarda el nombre del producto para el enviode email
                                $row.find('.productStock').text(data.unitsInStock);
                                $row.find('input[name$=".Stock"]').val(data.unitsInStock); // input ocultos que sirven solo para mostrar la informacion
                                $row.find('input[name$=".UnitPrice"]').val(data.unitPrice); // en la vista en caso de un error en el modelo Sale
                                var cantidad = parseFloat($row.find('input[name$=".Quantity"]').val()) || 0; 
                                var total = data.unitPrice * cantidad
                                $row.find('.totalDetail').text(total.toFixed(2));
                                calculateTotalSale();
                            } else {
                                console.error('Producto no encontrado');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error al obtener la información del producto:', error);
                        }
                    });
                }
            }

            

            // VALIDACION DEL FORMULARIO

            // evita el envio del fromulario si las cantidades son mayores al Stock o si existen productos duplicados
            $('form').submit(function (event) {
                var valid = true;
                $('#details-table tbody tr').each(function () {
                    var $row = $(this);
                    var cantidad = parseFloat($row.find('input[name$=".Quantity"]').val()) || 0;
                    var stock = parseFloat($row.find('.productStock').text()) || 0;
                    if (!checkQuantity($row, cantidad, stock)) {
                        valid = false;
                    }
                });

                if (!checkClientEmployeeId()) {
                    $('#clientOrEmployeeId').modal('show');
                    event.preventDefault();
                }

                if (!valid) {
                    $('#enoughStock').modal('show');
                    event.preventDefault();
                }

                if (!checkProduct()) {
                    event.preventDefault();
                    $('#checkProduct').removeClass('d-none')
                };

                if (!validateDuplicateProducts()){
                    $('#duplicateProduct').modal('show');
                    event.preventDefault();
                }
            });

            // VALIDACIONES 

            // valida que la cantidad solicitada no supere el Stock
            function checkQuantity($row, cantidad, stock) {
                if (cantidad > stock || cantidad <= 0) {
                    $row.find('input[name$=".Quantity"]').addClass('is-invalid');
                    return false;
                } else {
                    $row.find('input[name$=".Quantity"]').removeClass('is-invalid');
                    return true;
                }
            }

            // valida que se seleccione el empleado y el cliente
            function checkClientEmployeeId() {
                var selectedClient = $('#clientsSearch').val();
                var selectedEmployee = $('#employeesSearch').val();
                console.log(selectedClient, selectedEmployee);
                if (selectedClient == null || selectedClient == '' || selectedEmployee == null || selectedEmployee == ''){
                    return false
                } else {
                    return true
                }
            }

            // valida que se agrege al menos 1 producto
            function checkProduct() {
                return $('#details-table tbody tr').length > 0;
            }

            // valida que no hay productos repetidos
            function validateDuplicateProducts() {
                var products = [];
                var hasDuplicates = false;

                if ($('#details-table tbody tr').length === 0) {    // si no existen filas no hay duplicados
                    return true;
                }

                $('#details-table tbody tr').each(function () {
                    var $row = $(this);
                    var productID = $row.find('.product-select').val();
                    if (products.includes(productID)) {
                        $row.addClass('bg-danger'); 
                        hasDuplicates = true;
                    } else {
                        $row.removeClass('bg-danger');  
                        products.push(productID);
                    }
                });
                return !hasDuplicates;
            }
        });

        // para mostrar la fecha actual
        var spanDate = document.getElementById('currentDate');
        var currentDate = new Date();
        var formatDate = currentDate.toLocaleDateString('es-ES', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });
        spanDate.textContent = formatDate;
    </script>
}
