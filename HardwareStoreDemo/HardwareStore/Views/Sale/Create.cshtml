﻿
@model Sale

@{
    ViewData["Title"] = "Create";
    ViewData["TitlePage"] = "Registrar Venta";
}

<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row bg-light py-2 rounded-2">
                <div class="form-group col-md-6 d-flex flex-column py-3">
                    <label asp-for="ClientID" class="control-label"></label>
                    <select asp-for="ClientID" asp-items="@ViewBag.Clients" id="clientsSearch">
                        <option value=""></option>
                    </select>
                    <span asp-validation-for="ClientID" class="text-danger"></span>
                </div>
                <div class="form-group col-md-6 py-3">
                    <b>Fecha: </b> <br />
                    <span id="currentDate"></span>
                </div>
                <div class="form-group col-md-6 d-flex flex-column py-3">
                    <label asp-for="EmployeeID" class="control-label"></label>
                    <select asp-for="EmployeeID" asp-items="@ViewBag.Employees" id="employeesSearch">
                        <option value="">Seleccione un Empleado</option>
                    </select>
                    <span asp-validation-for="EmployeeID" class="text-danger"></span>
                </div>
                
                <div class="form-group col-md-6 py-3">
                    <b>Total: $</b> <span id="total">0</span>
                </div>
            </div>

            <table id="details-table" class="table table-striped table-responsive table-bordered mt-2 bg-light">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Stock</th>
                        <th>Precio</th>
                        <th>Total</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Aquí se agregarán las filas dinámicamente -->
                </tbody>
            </table>

            <button type="button" id="add-row" class="btn btn-primary">Agregar Producto</button>
            <button type="submit" class="btn btn-success">Guardar Venta</button>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-primary mt-2">Volver a la Lista</a>
</div>

@section Scripts {

    <script>
        $(document).ready(function () {
            $('#clientsSearch').select2({
                language: "es",
                width: '47%',
                placeholder: "Seleccione un Cliente a la venta",
            });

            $('#employeesSearch').select2({
                language: "es",
                width: '40%',
                placeholder: "Seleccione un Empleado",
            });

            // agrega filas en tabla de productos
            $('#add-row').click(function () {
                var index = $('#details-table tbody tr').length;
                var fila = `<tr>
                                 <td>
                                      <select name="SaleDetails[${index}].ProductID" class="form-control product-select">
                                            <option value="">Seleccione un Producto</option>
                                            @foreach (var product in ViewBag.Products)
                                                {
                                                    <option value="@product.Value">@product.Text</option>
                                                }
                                      </select>
                                 </td>
                                 <td><input type="number" name="SaleDetails[${index}].Quantity" class="form-control" /></td>
                                 <td><span class="productStock">0</span></td>
                                 <td>$ <span class="productPrice">0</span></td>
                                 <td>$ <span class="totalDetail">0</span></td>
                                 <td>
                                              <button type="button" class="btn btn-success"><i class="lni lni-shopping-basket"></i></button>
                                              <button type="button" class="btn btn-danger remove-row"><i class="lni lni-trash-can"></i></button>
                                 </td>
                            </tr>`;
                $('#details-table tbody').append(fila);
                $('.product-select').select2({ // agrega select2 a todos los elementos con la clase "product-select"
                    language: "es",
                    width: '100%',
                    placeholder: "Seleccione un Producto",
                    allowClear: true
                });
            });

            // elimina las filas de la tabla de productos
            $('#details-table').on('click', '.remove-row', function () {
                $(this).closest('tr').remove();
                calculateTotalSale();
            });

            // recupera el id del producto seleccionado
            $('#details-table').on('change', '.product-select', function () {
                var selectedProduct = $(this).val();
                searchProductInfo(selectedProduct, $(this).closest('tr'));
            });

            // llena la fila cuando se selecciona un producto
            $('#details-table').on('change', 'input[name$=".Quantity"]', function () {
                var $row = $(this).closest('tr');
                var cantidad = parseFloat($row.find('input[name$=".Quantity"]').val()) || 0;
                var stock = parseFloat($row.find('.productStock').text()) || 0;
                var precio = parseFloat($row.find('.productPrice').text()) || 0;
                var total = cantidad * precio;
                $row.find('.totalDetail').text(total.toFixed(2));
                checkQuantity($row, cantidad, stock);
                calculateTotalSale();
            });

            // evita el envio del fromulario si las cantidades son mayores al estock
            $('form').submit(function (event) {
                var valid = true;
                $('#details-table tbody tr').each(function () {
                    var $row = $(this);
                    var cantidad = parseFloat($row.find('input[name$=".Quantity"]').val()) || 0;
                    var stock = parseFloat($row.find('.productStock').text()) || 0;
                    if (!checkQuantity($row, cantidad, stock)) {
                        valid = false;
                    }
                });

                if (!valid) {
                    alert('¡No hay suficiente stock para uno o más productos!');
                    event.preventDefault();
                }
            });

            // valida que la cantidad solicitada no supere el Stock
            function checkQuantity($row, cantidad, stock) {
                if (cantidad > stock) {
                    $row.find('input[name$=".Quantity"]').addClass('is-invalid');
                    return false;
                } else {
                    $row.find('input[name$=".Quantity"]').removeClass('is-invalid');
                    return true;
                }
            }

            // suma los totales de los detalles para mostrar el total de la venta
            function calculateTotalSale() {
                var totalVenta = 0;
                $('#details-table tbody tr').each(function () {
                    var total = parseFloat($(this).find('.totalDetail').text()) || 0;
                    totalVenta += total;
                });
                $('#total').text(totalVenta.toFixed(2));
            }

            // trae el precio y el stock del producto y actualiza la fila
            function searchProductInfo(productID, $row) {
                if (productID) {
                    $.ajax({
                        url: '/Sale/SearchProductById',
                        method: 'GET',
                        data: { id: productID },
                        success: function (data) {
                            if (data) {
                                $row.find('.productPrice').text(data.unitPrice);
                                $row.find('.productStock').text(data.unitsInStock);
                                calculateTotalSale();
                            } else {
                                console.error('Producto no encontrado');
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error al obtener la información del producto:', error);
                        }
                    });
                }
            }
        });

        // para mostrar la fecha actual
        var spanDate = document.getElementById('currentDate');
        var currentDate = new Date();
        var formatDate = currentDate.toLocaleDateString('es-ES', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });
        spanDate.textContent = formatDate;
    </script>
}
